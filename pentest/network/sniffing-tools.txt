One of the most common tool for network sniffing and MiTM attacks is dsniff.
Although no longer supported, dsniff still remains a very good tool and a complete suite.
Indeed, it includes a bunch of tools like:
- Urlsnarf, Filesnarf, Webspy, Mailsnarf and Msgsnarf for passive sniffing;
- Arpspoof, Dnsspoof, Macof for active sniffing;
- Sshmitm and Webmiitm for MiTM attacks.


Some dsniff common options are:
- "-c" : perform half-duplex TCP stream reassembly, to handle asymmetrically routed traffic (such as when using 
	arpspoof to intercept client traffic bound for the local gateway;
- "-d" : enable debugging mode
- "-m" : enable automatic protocol detection
- "-n" : do not resolve IP addresses to hostnames
- "-p" : process the contents of the given PCAP capture file (like Wireshark PCAP files)
- "-i" : specify the interface to listen on

Dsniff can automatically detect plaintext traffic like usernames and passswords.
The same goal may be achieved using Wireshark filters:
- start traffic capture filtering by http protocol;
- save the capture and open it;
- apply a "http.authbasic" filter in order to find packets containing plaintext credentials.
Wireshark filters allow users to narrow down needed information.

Tcpdump is a command-line network sniffer, like Wireshar allows for saving capture files for later analysis.
The main syntax goes like "tcpdump [options] [filters]".
For example, sudo tcpdump -i eth0 sets the program to listen to all traffic on interface eth0.
Some common options include:
- "-dst" : shows only communications with the destination specified;
- "-A" : print each packet (minus its link level header) is ASCII (good for capturing web pages);
- "-XX" : when paring and printing, in addition to print the headers of each packet, print the data of each packet,
		including its link level header in hex and ASCII.
- "-xx" : when paring and printing, in addition to print the headers of each packet, print the data
		of each packet, including its link level header in hex.
- "-S" : print absolute, rather than relative, TCP sequence numbers.
- "-s" : snarf snaplen bytes of data from each packet rather than the default of 68.
		68 bytes is adequate for IP, ICMP, TCP and UDP but may truncate protocol information from
		name server and NFS packets. Packets truncated because of a limited snapshot are indicated in the
		output with "[|proto]", where proto is the name of the protocol levelat which the truncation has 
		occurred. Note that taking lager snapshots both increases the amount of time it takes to process packet,
		and effectively decreases the amount of packet buffering. This may cause pckets to be lost.
		Setting snaplen to 0 means use the required length ot catch whole packets.
- "-v" : set verbose mode. To increase the level of verbosity, add more "v".
Tcpdump alternative for Windows is called Windump-
