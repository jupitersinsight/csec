In order to "break" confidentiality and integrity that SSL encryption assures, attackers must focus on possible 
handshake vulnerabilities.

A victim may become aware of an ongoing attack because attacker's self-signed certificates will trigger alerts.


Ettercap can intercept and manipulate sniffed encrypted traffic by sending a self-generated certificate to the victim every time it accesses a resource. If the client accepts it, Ettercap can manipulate the packets and decrypt them.
First of all, the configuration file at /etc/ettercap/etter.conf must be modified by changing some values:
- from "ec_uid = 65534" to "ec_uid = 0"
- from "ec_guid = 65534" to "ec_guid = 0"
- uncomment, in the right OS section, lines which contains "redir_command_on" and "redit_command_off"

Since Ettercap uses a self-signed certificate in order to be able to manipulate SSL protected traffic, the victim will be
prompted with a warning page.


SSLSTRIP is a tool which can manipulate SSL encrypted traffic without the need of using a self-signed certificate by 
attacking HTTP.
The attacker acts like a sort of proxy, communicating via HTTP with the client and via HTTPS with the server.
All intercepted traffic is logged and so are passwords, credentials and other useful information.
SSLSTRIP does have some shortcomings which are countered by stripping away parts from HTTP-HTTPS requests.

Example usage -> Ettercap ARP MitM + SSLSTRIP:
- enable ip forwarding
- add iptables rule to redirect traffic to specific port: iptables -t nat -A PREROUTING -p tcp --destination port X 
    -j REDIRECT --to-ports Y
- sslstrip -a -f -l Y -w OUTPUT-FILE
- launch a MiTM using Ettercap

Bettercap already implements SSLSTRIP which can be invoked using the --proxy-https option:
- bettercap -G [GATEWAY_IP] -T [TARGET_IP] --proxy-https

Some modern web applications and browsers implement what is called HSTS.
HSTS stands for HTTP Strict Transport Security and forces HTTP traffic to be redirected to HTTPS port.
This feature counters HTTPS-downgrade attacks.
Due to the fact that SSL-stripping works best on first-time connections (because the browser does not know if HTTP
connection is good to establish with that host), browsers nowadays may have a "preload list".
A preload list simply contains a list of websites which accepts onyl HTTPS connections and that use HSTS.

In 2014 a new version of SSLStrip called sslstrip+ was published.
sslstrip+ can partially bypass HSTS.
Example attack:
- Victim navigates to google.com (not in HSTS preload list)
- Attacker intercepts requests and change links in the page to something similar but non-existent (like accounts.google.com
    to acccounts.google.com)
- Victim's browser tries to resolve fake link by sending a DNS query
- Attacker intercepts the DNS query and send back fake domain and IP (its own - DNS server running)
- Victim browser search if fake address/domain needs HSTS to work, since it does not find it HTTP is used

